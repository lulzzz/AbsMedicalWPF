//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AbsMedical.CountryServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CountryServiceReference.ICountryService")]
    public interface ICountryService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryService/GetCountries", ReplyAction="http://tempuri.org/ICountryService/GetCountriesResponse")]
        System.Collections.Generic.List<AbsMedical.WCF.Country> GetCountries();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICountryService/GetCountries", ReplyAction="http://tempuri.org/ICountryService/GetCountriesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AbsMedical.WCF.Country>> GetCountriesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICountryServiceChannel : AbsMedical.CountryServiceReference.ICountryService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CountryServiceClient : System.ServiceModel.ClientBase<AbsMedical.CountryServiceReference.ICountryService>, AbsMedical.CountryServiceReference.ICountryService {
        
        public CountryServiceClient() {
        }
        
        public CountryServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CountryServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CountryServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CountryServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<AbsMedical.WCF.Country> GetCountries() {
            return base.Channel.GetCountries();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AbsMedical.WCF.Country>> GetCountriesAsync() {
            return base.Channel.GetCountriesAsync();
        }
    }
}
